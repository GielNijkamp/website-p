/* [project]/src/app/globals.css [app-client] (css) */
.collapse {
  visibility: collapse;
}

.invisible {
  visibility: hidden;
}

.visible {
  visibility: visible;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.relative {
  position: relative;
}

.static {
  position: static;
}

.sticky {
  position: sticky;
}

.-z-10 {
  z-index: calc(10 * -1);
}

.z-10 {
  z-index: 10;
}

.z-\[-1\] {
  z-index: -1;
}

.\!container {
  width: 100% !important;
}

.container {
  width: 100%;
}

.block {
  display: block;
}

.contents {
  display: contents;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.inline {
  display: inline;
}

.inline-block {
  display: inline-block;
}

.table {
  display: table;
}

.min-h-\[calc\(100vh-var\(--header-height\)\)\] {
  min-height: calc(100vh - var(--header-height));
}

.min-h-screen {
  min-height: 100vh;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.border-collapse {
  border-collapse: collapse;
}

.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}

.resize {
  resize: both;
}

.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}

.pt-\[80px\] {
  padding-top: 80px;
}

.pt-\[var\(--header-height\)\] {
  padding-top: var(--header-height);
}

.lowercase {
  text-transform: lowercase;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.underline {
  text-decoration-line: underline;
}

.ring {
  --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
}

.filter {
  filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
}

.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

@media (hover: hover) {
  .hover\:underline:hover {
    text-decoration-line: underline;
  }
}

@layer base {
  :root {
    --color-primary: #0e0e1a49;
    --color-secondary: #f1d301;
    --color-text: #fff3;
    --color-background-dark: #333;
    --color-background-light: 255 255 255 .1;
    --color-border: 255 255 255 .2;
    --color-overlay: 0 0 0 .5;
    --color-secondary-rgb: 241, 211, 1;
    --header-height: 4rem;
    --header-height-scrolled: 60px;
    --font-base: "Montserrat", sans-serif;
    --font-heading: "Montserrat", sans-serif;
    --spacing-xl: 4rem;
    --spacing-lg: 2rem;
    --color-secondary: #f1d501;
    --text-bold: 700;
  }
}

body {
  margin: 0;
  padding: 0;
  padding-top: var(--header-height);
  font-family: var(--font-base);
  color: rgb(var(--color-text));
  background-color: rgb(var(--color-primary));
}

body:after {
  content: "Header height: " var(--header-height);
  position: fixed;
  bottom: 0;
  background: red;
  color: #fff;
  z-index: 9999;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  scroll-behavior: smooth;
}

*, :before, :after {
  box-sizing: border-box;
}

.fullscreen-hero {
  height: 100vh;
  max-width: 1400px;
  display: flex;
  align-items: center;
  margin: 0 auto;
}

.mission-statement {
  text-align: center;
  max-width: 700px;
  margin: 0 auto;
  padding: 0 2rem;
}

.services-section {
  border-radius: 20px;
  opacity: 0;
  transform: translateY(50px);
  transition: opacity 1s ease-out, transform 1s ease-out;
  width: 80%;
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--spacing-xl) 0;
  background-color: #0a0a1a94;
}

.services-section.visible {
  opacity: 1;
  transform: translateY(0);
}

.services-section h2 {
  text-align: center;
  font-size: 2.5rem;
  margin-bottom: var(--spacing-xl);
  padding-top: var(--spacing-xl);
  position: relative;
  font-weight: var(--text-bold);
  line-height: 1.2;
}

.services-section h2:after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 3px;
  background: var(--color-secondary);
  border-radius: 2px;
  transition: width .3s;
}

.services-section h2:hover:after {
  width: 100px;
}

.services-section.visible h2 {
  opacity: 0;
  transform: translateY(20px);
  animation: .8s ease-out forwards fadeInUp;
  animation-delay: .3s;
}

.service-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  padding: var(--spacing-lg) 0;
}

.service-card {
  position: relative;
  padding: 2rem;
  border-radius: 15px;
  background: #0e0e1b;
  border: 1px solid #ffffffc2;
  transition: all .4s;
  overflow: hidden;
  cursor: pointer;
  box-shadow: 0 4px 20px #afafaf33;
}

.service-card:before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 15px;
  padding: 2px;
  background: linear-gradient(45deg, #f1d501, #f1d301cc, #fffc, #fff0);
  background-size: 200% 200%;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0;
  transition: opacity .4s;
}

.service-card:hover:before {
  opacity: 1;
  animation: 2s linear infinite electricFlow;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes electricFlow {
  0% {
    background-position: 0%;
  }

  100% {
    background-position: 50% 100%;
  }
}

@media (width <= 768px) {
  .services-section {
    width: 90%;
    padding: var(--spacing-lg) 0;
  }

  .services-section h2 {
    font-size: 2rem;
    padding-top: var(--spacing-lg);
    margin-bottom: var(--spacing-lg);
  }

  .services-section h2:after {
    width: 40px;
    height: 2px;
    bottom: -5px;
  }

  .service-grid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .service-card {
    padding: 1.5rem;
  }

  .fullscreen-hero {
    padding-top: 5rem;
    align-items: flex-start;
  }

  .mission-statement h1 {
    font-size: 3rem;
  }
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}


/*# sourceMappingURL=src_app_globals_b805903d.css.map*/
